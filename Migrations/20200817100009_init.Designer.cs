// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteManga.Data;

namespace SiteManga.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200817100009_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SiteManga.Models.Editor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Editor");
                });

            modelBuilder.Entity("SiteManga.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("mangaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("mangaId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("SiteManga.Models.Manga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int?>("EditorId")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EditorId");

                    b.ToTable("Manga");
                });

            modelBuilder.Entity("SiteManga.Models.MangaOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MangaId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MangaId");

                    b.HasIndex("OrderId");

                    b.ToTable("MangaOrders");
                });

            modelBuilder.Entity("SiteManga.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressInvoiceCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressInvoiceCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressInvoiceOption1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressInvoiceOption2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressInvoicePostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressInvoiceSteelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressShippingCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressShippingCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressShippingOption1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressShippingOption2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressShippingPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressShippingSteelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ShippingTax")
                        .HasColumnType("float");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<double>("TotalWeight")
                        .HasColumnType("float");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SiteManga.Models.Image", b =>
                {
                    b.HasOne("SiteManga.Models.Manga", "manga")
                        .WithMany("Images")
                        .HasForeignKey("mangaId");
                });

            modelBuilder.Entity("SiteManga.Models.Manga", b =>
                {
                    b.HasOne("SiteManga.Models.Editor", "Editor")
                        .WithMany()
                        .HasForeignKey("EditorId");
                });

            modelBuilder.Entity("SiteManga.Models.MangaOrder", b =>
                {
                    b.HasOne("SiteManga.Models.Manga", "Manga")
                        .WithMany()
                        .HasForeignKey("MangaId");

                    b.HasOne("SiteManga.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
